// Mocks generated by Mockito 5.4.6 from annotations
// in delivery_app/test/features/auth/data/repositories_impl/auth_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:delivery_app/core/data/dtos/base_response_dto.dart' as _i5;
import 'package:delivery_app/features/auth/data/datasources/auth_remote_datasource.dart'
    as _i2;
import 'package:delivery_app/features/auth/data/dtos/auth_response_dto.dart'
    as _i6;
import 'package:delivery_app/features/auth/data/dtos/login_request_dto.dart'
    as _i7;
import 'package:delivery_app/features/auth/data/dtos/refresh_token_response_dto.dart'
    as _i10;
import 'package:delivery_app/features/auth/data/dtos/register_request_dto.dart'
    as _i9;
import 'package:fpdart/fpdart.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i2.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Either<Exception, _i5.BaseResponseDto<_i6.AuthDataDto>>> login(
          _i7.LoginRequestDto? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [request],
        ),
        returnValue: _i3.Future<
                _i4
                .Either<Exception, _i5.BaseResponseDto<_i6.AuthDataDto>>>.value(
            _i8.dummyValue<
                _i4.Either<Exception, _i5.BaseResponseDto<_i6.AuthDataDto>>>(
          this,
          Invocation.method(
            #login,
            [request],
          ),
        )),
      ) as _i3
          .Future<_i4.Either<Exception, _i5.BaseResponseDto<_i6.AuthDataDto>>>);

  @override
  _i3.Future<_i4.Either<Exception, _i5.BaseResponseDto<bool>>> register(
          _i9.RegisterRequestDto? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [request],
        ),
        returnValue: _i3
            .Future<_i4.Either<Exception, _i5.BaseResponseDto<bool>>>.value(
            _i8.dummyValue<_i4.Either<Exception, _i5.BaseResponseDto<bool>>>(
          this,
          Invocation.method(
            #register,
            [request],
          ),
        )),
      ) as _i3.Future<_i4.Either<Exception, _i5.BaseResponseDto<bool>>>);

  @override
  _i3.Future<
          _i4.Either<Exception, _i5.BaseResponseDto<_i10.RefreshTokenDataDto>>>
      refreshToken(String? refreshToken) => (super.noSuchMethod(
            Invocation.method(
              #refreshToken,
              [refreshToken],
            ),
            returnValue: _i3.Future<
                    _i4.Either<Exception,
                        _i5.BaseResponseDto<_i10.RefreshTokenDataDto>>>.value(
                _i8.dummyValue<
                    _i4.Either<Exception,
                        _i5.BaseResponseDto<_i10.RefreshTokenDataDto>>>(
              this,
              Invocation.method(
                #refreshToken,
                [refreshToken],
              ),
            )),
          ) as _i3.Future<
              _i4.Either<Exception,
                  _i5.BaseResponseDto<_i10.RefreshTokenDataDto>>>);
}
